ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
}
ratioGraphe(contigueRatio)
ratioGraphe(nonContigueRatio)
source("~/.active-rstudio-document")
ratioGraphe = function(dt){
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = dt[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
}
noncontigue = read.csv(file="problemNonContigue.csv")
head(noncontigue)
nonContigueRatio = ratio(noncontigue)
ratioGraphe(nonContigueRatio)
contigue = read.csv(file = "problemContigue.csv")
head(contigue)
contigueRatio = ratio(contigue)
ratioGraphe(contigueRatio)
nrow(noncontigue)
nonContigueRatio = ratio(noncontigue)
ratioGraphe(nonContigueRatio)
noncontigue = read.csv("problemNonContigue.csv")
View(noncontigue)
rm(nonContigue)
View(noncontigue[which(noncontigue$session==10 & noncontigue$addend==5)])
View(noncontigue[which(noncontigue$session==10 & noncontigue$addend==5)])
which(noncontigue$session==10 & noncontigue$addend==5)
noncontigue[which(noncontigue$session==10 & noncontigue$addend==5)]
View(noncontigue[which(noncontigue$session==10 & noncontigue$addend==5),])
a = noncontigue[which(noncontigue$session==10 & noncontigue$addend==5),]
which(a$strategy=="answer")
length(which(a$strategy=="answer"))
length(which(a$strategy=="production"))
ratioGraphe(ratio(noncontigue))
v = noncontigue[["session 10", "addend 5"]]
length(which(v$strategy=="production"))
length(which(v$strategy=="answer"))
v
v = ratio(noncontigue)[["session 10", "addend 5"]]
length(which(v$strategy=="answer"))
v
ratio(noncontigue)
ratio(noncontigue)[4,10]
ratio(noncontigue)[10,4]
v = ratio(noncontigue)[["session 10", "addend 5"]]
v
a = noncontigue[which(noncontigue$session==10 & noncontigue$addend==5),]
length(which(a$strategy=="production"))
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in unique(dt$addend)){
for(session in unique(data$session)){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
return(Ratio)
}
v = ratio(noncontigue)[["session 10", "addend 5"]]
v
ratioGraphe(ratio(noncontigue))
ratioGraphe(ratio(noncontigueRatio))
ratioGraphe(ratio(noncontigue))
ratio(noncontigue)
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
return(Ratio)
}
ratio(noncontigue)
ratioGraphe(ratio(noncontigue))
ratioGraphe(ratio(contigue))
noncontigue = read.csv("problemNonContigue.csv")
ratioGraphe(ratio(noncontigue))
ratioGraphe(ratio(contigue))
ratioGraphe = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = Ratio[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
}
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = Ratio[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
}
ratio(contigue)
ratio(noncontigue)
contigueRatio
contigueRation[["addend 2", "session 1"]]
contigueRatio[["addend 2", "session 1"]]
contigueRatio[[ "session 1","addend 2"]]
contigueRatio[[ "session 10","addend 4"]]
text(0,0,"oui")
text(1,1,"oui")
text(1,2,"oui")
?texte
?text
text(1,0,"oui")
text(1,-1,"oui")
text(1,-1.2,"oui")
text(-1,-1.2,"oui")
text(P0,-1.2,"oui")
text(0,-1.2,"oui")
text(0.2,-1.2,"oui")
text(0.8,-1.2,"oui")
text(0.7,-1.2,"oui")
text(0.6,-1.2,"oui")
text(0.65,-1.2,"oui")
text(0.65,-1.2,"+2")
text(0.65,-1.2,"+2", font=2)
text(0.65,-1.2,"+2", font=2, lwd=3)
text(0.65,-1.2,"+2", font=2, lwd=10)
text(0.65,-1.2,"+2", cex=3)
text(0.85,-1.2,"oui")
text(0.87,-1.2,"oui")
text(0.88,-1.2,"oui")
text(0.88,-1.2,"+3", cex=3)
text(1.1,-1.2,"oui")
text(1.1,-1.2,"+4", cex=3)
text(1.4,-1.2,"oui")
text(1.34,-1.2,"oui")
text(1.34,-1.2,"+5", cex=3)
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = Ratio[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
text(0.65,-1.2,"+2", cex=3)
text(0.88,-1.2,"+3", cex=3)
text(1.1,-1.2,"+4", cex=3)
text(1.34,-1.2,"+5", cex=3)
}
ratio(contigue)
ratio(noncontigue)
text(0.6, 1.2, "oui", cex=2)
text(0.56, 1.2, "oui", cex=2)
text(0.52, 1.2, "oui", cex=2)
text(0.52, 1.1, "oui", cex=2)
text(0.52, 0.6, "oui", cex=2)
text(0.52, 0.8, "oui", cex=2)
text(0.52, 0.8, "oui", cex = 2, srt = 45)
text(0.52, 0.8, "oui", cex = 2, srt = -90)
text(0.52, 0.8, "session 1", cex = 2, srt = -90)
text(0.52, 0.84, "session 1", cex = 2, srt = -90)
text(0.52, 0.81, "session 1", cex = 2, srt = -90)
text(0.52, 0.87, "session 1", cex = 2, srt = -90)
text(0.52, 0.5, "session 1", cex = 2, srt = -90)
text(0.52, 0.1, "session 1", cex = 2, srt = -90)
text(0.52, 0.25, "session 1", cex = 2, srt = -90)
text(0.52, 0.3, "session 1", cex = 2, srt = -90)
text(0.52, 0.35, "session 1", cex = 2, srt = -90)
text(0.52, 0.33, "session 4", cex = 2, srt = -90)
text(0.52, 0.87, "session 1", cex = 2, srt = -90)
text(0.52, 0.33, "session 4", cex = 2, srt = -90)
text(0.52, 0.31, "session 4", cex = 2, srt = -90)
text(0.52, 0.30, "session 4", cex = 2, srt = -90)
text(0.52, 0.29, "session 4", cex = 2, srt = -90)
text(0, 0.29, "session 7", cex = 2, srt = -90)
text(0.1, 0.29, "session 7", cex = 2, srt = -90)
text(-0.5, 0.29, "session 7", cex = 2, srt = -90)
text(0.2, 0.29, "session 7", cex = 2, srt = -90)
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = Ratio[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
text(0.65,-1.2,"+2", cex=3)
text(0.88,-1.2,"+3", cex=3)
text(1.1,-1.2,"+4", cex=3)
text(1.34,-1.2,"+5", cex=3)
text(0.52, 0.87, "session 1", cex = 2, srt = -90)
text(0.52, 0.29, "session 4", cex = 2, srt = -90)
}
ratio(contigue)
ratio(noncontigue)
text(0.52, -0.2, "session 7", cex = 2, srt = -90)
text(0.52, -0.29, "session 7", cex = 2, srt = -90)
text(0.52, -0.87, "session 10", cex = 2, srt = -90)
ratio = function(dt){
Ratio = matrix(vector("list", 40), nrow =10, ncol =4)
colnames(Ratio) = c("addend 2", "addend 3", "addend 4", "addend 5")
rownames(Ratio) = c("session 1", "session 2", "session 3", "session 4", "session 5", "session 6", "session 7", "session 8", "session 9", "session 10")
for(addend in c(2,3,4,5)){
for(session in 1:10){
data = dt[which(dt$session == session & dt$addend == addend),]
production=length(which(data$strategy=="production"))
answer=length(which(data$strategy=="answer"))
vect = list(c(production,answer))
names(vect[[1]]) = c("production", "answer")
Ratio[session,(addend-1)] = vect
}
}
par(mfrow = c(4, 4),
mar = c(2, 2, 2, 1),   # marges internes : bottom, left, top, right
oma = c(6, 4, 5, 1),   # marges externes (bas = 6 lignes)
xpd = NA)
for(sess in c(1,4,7,10)){
for(add in 2:5){
v = Ratio[[paste0("session ", sess), paste0("addend ", add)]]
mat = matrix(v, nrow = length(v), ncol = 1)
bp = barplot(mat, col = c("red", "blue"),
names.arg = "",
ylim = c(0, sum(v)),
main = paste0("sess ", sess, "; add ", add),
ylab = "Nombre d'utilisation des stratégies")
segments_hauteur = cumsum(v)
segments_bas = c(0, segments_hauteur[-length(segments_hauteur)])
for(i in 1:length(v)){
text(bp, segments_bas[i] + v[i]/2, labels = v[i], col = "white", font = 2)
}
}
}
mtext("Stratégies utilisées", outer = TRUE, line = 1.5, cex = 1.5)
par(fig = c(0, 1, 0, 1), new = TRUE)
plot(0, type = "n", axes = FALSE, xlab = "", ylab = "")
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.1),
legend = c("production", "answer"),
fill = c("red", "blue"),
horiz = TRUE,
bty = "n",
cex = 1.2)
legend("bottom",        # "bottom" pour centré en bas
inset = c(0, -0.14),
legend = paste0("nom du fichier : ", deparse(substitute(dt))),
horiz = TRUE,
bty = "n",
cex = 1.2)
text(0.65,-1.2,"+2", cex=3)
text(0.88,-1.2,"+3", cex=3)
text(1.1,-1.2,"+4", cex=3)
text(1.34,-1.2,"+5", cex=3)
text(0.52, 0.87, "session 1", cex = 2, srt = -90)
text(0.52, 0.29, "session 4", cex = 2, srt = -90)
text(0.52, -0.29, "session 7", cex = 2, srt = -90)
text(0.52, -0.87, "session 10", cex = 2, srt = -90)
}
ratio(contigue)
ratio(noncontigue)
trespeucontigue = read.csv(file = "problemTresPeuContigue")
trespeucontigue = read.csv(file = "problemTresPeuContigue.csv")
head(tresPeuContigue)
head(trespeucontigue)
ratio(trespeucontigue)
text(1.34,-1.25,"(A,D,G,J,M,P)", cex=1)
text(1.34,-1.35,"(A,D,G,J,M,P)", cex=1)
text(1.34,-1.32,"(A,D,G,J,M,P)", cex=1)
ratio(trespeucontigue)
text(1.34,-1.32,"(A,D,G,J,M,P)", cex=1)
text(1.34,-1.32,"(A,B,C,D,E,F)", cex=1)
text(1.34,-1.32,"(A,C,E,G,I,K)", cex=1)
peucontigue=noncontigue
ratio(peucontigue)
text(1.34,-1.32,"(A,C,E,G,I,K)", cex=1)
noncontigue=read.csv("problemNonContigue.csv")
ratio(noncontigue)
text(1.34,-1.32,"(A,E,H,L,P)", cex=1)
