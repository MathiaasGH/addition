
library(readxl)

donnees_nettoyees <- read_excel("donnees_nettoyees.xlsx")

donnees_nettoyees_contigues = donnees_nettoyees[which(donnees_nettoyees$Ensemble == 333 | donnees_nettoyees$Ensemble == 444),]

donnees_nettoyees_noncontigues = donnees_nettoyees[which(donnees_nettoyees$Ensemble == 111 | donnees_nettoyees$Ensemble == 222),]


#Recupération des colonnes utiles
colonnes_utiles = cbind(Subject=donnees_nettoyees_contigues$Subject, Session=donnees_nettoyees_contigues$Session, Trial = donnees_nettoyees_contigues$Trial, Addend=donnees_nettoyees_contigues$Addend, Augend=donnees_nettoyees_contigues$Augend, Accuracy = donnees_nettoyees_contigues$Equation.ACC, rt=donnees_nettoyees_contigues$Equation.RT)
colonnes_utiles=as.data.frame(colonnes_utiles)

colonnes_utiles_nc = cbind(Subject=donnees_nettoyees_noncontigues$Subject, Session=donnees_nettoyees_noncontigues$Session, Trial = donnees_nettoyees_noncontigues$Trial, Addend=donnees_nettoyees_noncontigues$Addend, Augend=donnees_nettoyees_noncontigues$Augend, Success = donnees_nettoyees_noncontigues$Equation.ACC, Time=donnees_nettoyees_noncontigues$Equation.RT)
colonnes_utiles_nc=as.data.frame(colonnes_utiles_nc)

#Affectation du bon type
for(col in colnames(colonnes_utiles)){
  print(class(colonnes_utiles[[col]]))
}
colonnes_utiles[-5]=sapply(colonnes_utiles[-5], as.integer)
colonnes_utiles_nc[-5]=sapply(colonnes_utiles_nc[-5], as.integer)


#Contigue

colonnes_utiles$Time=as.numeric(colonnes_utiles$Time)
line_types <- list(
  c(1,1),      # Pointillés courts
  c(2,2),      # Pointillés un peu plus espacés
  c(3,3),      # Encore plus espacés
  c(4,4),      # Longs traits
  c(1,2,3,4),  # Mélange de petits et longs traits
  c(5,2,2,2),  # Gros trait + petit espace
  c(1,4,1,4),  # Alternance rapide
  c(2,5,2,5),  # Longs traits avec espace
  c(3,1,3,1),  # Alternance moyenne
  c(4,2,4,2),  # Longs traits avec petit espace
  c(5,5,1,5),  # Mélange d'épaisseurs
  c(5,3,2,1)
  )

#Ajuster la marge pour laisser la place a la legende en bas
par(xpd=TRUE, mar=c(9,4,4,3))
legend_labels <- c()
legend_line <- c()
for(sess in sort(unique(colonnes_utiles$Session))){
  session = colonnes_utiles[which(colonnes_utiles$Session==sess),]
  sessiontime=c()
  for(i in 2:5){
    sessiontime = c(sessiontime, mean(session[which(session$Addend == i),]$Time))
  }
  lty_style = line_types[[sess]]
  legend_labels = c(legend_labels, as.character(sess))
  legend_line = c(legend_line, lty_style)
  if(sess == 1){
    plot(2:5,sessiontime, type="o",ylim=c(1300, 4500), xaxt="n", ylab="mean time (ms)", xlab = "addend",main = "mean time resolving problem \n for each addend and \n for each session")
  }
  else{
    points(2:5, sessiontime, lty=lty_style, type="o")
  }
  axis(1, at=c(2, 3, 4, 5), labels=c(2, 3, 4, 5))
}
legend("bottom", legend = legend_labels, lty = legend_line, pch = 19, title = "Sessions", inset=c(0, -0.7), ncol=6)

#Non contigue

colonnes_utiles_nc$Time=as.numeric(colonnes_utiles_nc$Time)
line_types <- list(
  c(1,1),      # Pointillés courts
  c(2,2),      # Pointillés un peu plus espacés
  c(3,3),      # Encore plus espacés
  c(4,4),      # Longs traits
  c(1,2,3,4),  # Mélange de petits et longs traits
  c(5,2,2,2),  # Gros trait + petit espace
  c(1,4,1,4),  # Alternance rapide
  c(2,5,2,5),  # Longs traits avec espace
  c(3,1,3,1),  # Alternance moyenne
  c(4,2,4,2),  # Longs traits avec petit espace
  c(5,5,1,5),  # Mélange d'épaisseurs
  c(5,3,2,1)
)

#Ajuster la marge pour laisser la place a la legende en bas
par(xpd=TRUE, mar=c(9,4,4,3))
legend_labels <- c()
legend_line <- c()
for(sess in sort(unique(colonnes_utiles_nc$Session))){
  session = colonnes_utiles_nc[which(colonnes_utiles_nc$Session==sess),]
  sessiontime=c()
  for(i in 2:5){
    sessiontime = c(sessiontime, mean(session[which(session$Addend == i),]$Time))
  }
  lty_style = line_types[[sess]]
  legend_labels = c(legend_labels, as.character(sess))
  legend_line = c(legend_line, lty_style)
  if(sess == 1){
    plot(2:5,sessiontime, type="o",ylim=c(800, 4500), xaxt="n", ylab="mean time (ms)", xlab = "addend",main = "mean time resolving problem \n for each addend and \n for each session\nfor NCSC problems")
  }
  else{
    points(2:5, sessiontime, lty=lty_style, type="o")
  }
  axis(1, at=c(2, 3, 4, 5), labels=c(2, 3, 4, 5))
}
legend("bottom", legend = legend_labels, lty = legend_line, pch = 19, title = "Sessions", inset=c(0, -0.7), ncol=6)
